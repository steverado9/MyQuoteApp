const body = document.querySelector('body') //get the body element by the tag name
const quote = document.getElementById('content'); //get the element to house the quote by it's id 
const author = document.getElementById('author'); //get the element to house the author's name by it's id
const button = document.querySelector('.btn'); //get the button element by it's class name btn

//Using an onload function on the body element
const myFunction = async () => {
    const result = await getQuoteFromApi();//await and async function go together. The function is called inside a variable

    const spanElement1 = document.createElement('span'); //created a span element
    const spanQuoteMark1 = document.createTextNode('"'); //i put a single quote inside the span element as content
    spanElement1.appendChild(spanQuoteMark1); //i appened the single quote to the span element 

    quote.appendChild(spanElement1);//i append the span element to the element housing the Quotes generated by Api

    const quoteContent = document.createTextNode(result.randomQuote); //random generated quotes by the api
    quote.appendChild(quoteContent); //putting the random generated quotes inside the element housing the quote as content

    const spanElement2 = document.createElement('span'); //created another span element 
    const spanQuoteMark2 = document.createTextNode('"'); //put another single quote inside the span element
    spanElement2.appendChild(spanQuoteMark2); //append the single quote the span element

    quote.appendChild(spanElement2); //append the span element to the element housing the generated quote

    author.textContent = `~${result.randomAuthor}`; //called the value of random author using it's key and addig it as content to the author element
}

//using an asynchronous function to call an asynchronous function
button.addEventListener('click', async (e) => { //add an event listener to the button
    quote.textContent = "";
    
    const result = await getQuoteFromApi();//await and async function go together. The function is called inside a variable

    const spanElement1 = document.createElement('span'); //created a span element
    const spanQuoteMark1 = document.createTextNode('"'); //i put a single quote inside the span element as content
    spanElement1.appendChild(spanQuoteMark1); //i appened the single quote to the span element 

    quote.appendChild(spanElement1);//i append the span element to the element housing the Quotes generated by Api

    const quoteContent = document.createTextNode(result.randomQuote); //random generated quotes by the api
    quote.appendChild(quoteContent); //putting the random generated quotes inside the element housing the quote as content

    const spanElement2 = document.createElement('span'); //created another span element 
    const spanQuoteMark2 = document.createTextNode('"'); //put another single quote inside the span element
    spanElement2.appendChild(spanQuoteMark2); //append the single quote the span element

    quote.appendChild(spanElement2); //append the span element to the element housing the generated quote

    author.textContent = `~${result.randomAuthor}`; //called the value of random author using it's key and addig it as content to the author element
})

const getQuoteFromApi = async () => {
    let randomQuote = "";
    let randomAuthor = "";
    const url = "https://dummyjson.com/quotes/random"; //putting the url where you'll get data inside url variable
    try { //try
        const response = await fetch(url); //fetch the data using the url 
        if (!response.ok) { //if the fetched data is not okay
            throw new Error(`Response status: ${response.status}`); //throw this error
        }

        const json = await response.json(); //we put response.json inside a json variable
        randomQuote = json.quote; //we get the quote and put it inside a variable
        randomAuthor = json.author; //we get the author and put it inside a variable

    } catch (error) { //we catch the error
        console.error(error.message); //display this error message
    }
    return {
        randomQuote: randomQuote,
        randomAuthor: randomAuthor
    } //return the randomquote and randomAuthor inside an object
}



